
// ДЗ  Задача 7. 
/* 1. Реализовать структуру данных граф и два способа обхода графа:
 - в глубину (DFS)
 - в ширину (BFS)  
На вход будет подан массив ребер графа [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]
В результате должна быть структура, принимающая массив ребер и имеющая две функции, при вызове которых
будет выполнять обход вершин. Посещаемые вершины должны выводиться на экран.
*/
/*
Алгоритм поиска в глубину
Шаг 1. Всем вершинам графа присваивается значение не посещенная. Выбирается первая вершина и помечается как посещенная.

Шаг 2. Для последней помеченной как посещенная вершины выбирается смежная вершина, являющаяся первой помеченной как не посещенная, 
и ей присваивается значение посещенная.Если таких вершин нет, то берется предыдущая помеченная вершина.

Шаг 3. Повторить шаг 2 до тех пор, пока все вершины не будут помечены как посещенные
*/ 

"use strict";
let i = 0;
let j = 0;
let k = 0;
let linesTmp = [];
let edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]];;


//Определение номера последней вершины из списка ребер
function maxNodeNum (edges) {
let max = 0;
let i = 0;

for (i = 0; i < edges.length; i++) {
    if (max < Math.max.apply(null, edges[i])) max = Math.max.apply(null, edges[i]);
}
return max;
}
// end

let n = maxNodeNum(edges); //номер последнего узла

// описание графа
class Graf {
    constructor() {
        this.nodes = [];
    }
    addEdges(value, lines) {
      this.nodes.push({
        value: value,
        lines: lines.slice(0)
    });
    }
}
//end

let graf = new Graf();
//добавление узлов графа со списком смежных узлов
for (i = 0; i <= n; i++) {  // цикл по номеру узла
  
  linesTmp.length = 0;
  for (j = 0; j < edges.length; j++) {  // цикл по числу элементов входного массива дуг
    // заносим номера смежных узлов для i-го узла:
    if (edges [j][0] == i) {
        linesTmp.push(edges [j][1]);
    }
    if (edges [j][1] == i) {
        linesTmp.push(edges [j][0]);
    }
    
  } 
  
  graf.addEdges(i, linesTmp); 
}

console.log('end');

// edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]];
//console.log(   (edges));
